<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzh.tilas.Mapper.EmployeeMapper">

    <!-- 结果映射 映射规则，映射 java 实体类 Employee 的属性和数据库表 emp的字段
    这样即使不一致也能正常接收SQL查询结果封装为Employee类-->
    <resultMap id="EmployeeResultMap" type="Employee">
        <id property="id" column="id"/>
        <result property="entryDate" column="entry_date"/>
        <result property="jobId" column="job_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="createTime" column="create_time"/>
        <result property="phoneNumber" column="phone_number"/>
    </resultMap>

    <!-- 添加员工 -->
    <insert id="insert" parameterType="Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO emp (
            username, password, name, gender, avatar, dept_id, job_id, salary, entry_date, create_time, update_time, phone_number
        ) VALUES (
            #{username}, #{password}, #{name}, #{gender}, #{avatar}, #{deptId}, #{jobId}, #{salary}, #{entryDate}, NOW(), NOW(), #{phoneNumber}
                 )
    </insert>

    <!-- 根据ID删除员工 -->
    <delete id="deleteById" parameterType="Integer">
        DELETE FROM emp WHERE id = #{id}
    </delete>
    <!-- 根据员工姓名删除员工-->
    <delete id="deleteByName" parameterType="String">
        DELETE FROM emp WHERE name = #{name}
    </delete>
    <!-- 根据IDs批量删除员工-->
    <update id="deleteByIds" parameterType="Integer[]">
        DELETE FROM emp WHERE id IN
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <!-- 更新员工信息 -->
    <update id="update" parameterType="Employee">
        UPDATE emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="jobId != null">job_id = #{jobId},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询员工 -->
    <select id="getById" parameterType="Integer" resultMap="EmployeeResultMap">
        SELECT * FROM emp WHERE id = #{id}
    </select>
    <!-- 根据员工名称查询员工-->
    <select id="getByName" parameterType="String" resultMap="EmployeeResultMap">
        SELECT * FROM emp WHERE name = #{name}
    </select>



    <!-- 查询所有员工，根据创建时间降序排序返回结果 -->
    <select id="list" resultMap="EmployeeResultMap">
        SELECT * FROM emp ORDER BY create_time DESC
    </select>

    <!-- 根据部门ID查询员工，根据创建时间降序排序返回结果 -->
    <select id="listByDeptId" parameterType="Integer" resultMap="EmployeeResultMap">
        SELECT * FROM emp WHERE dept_id = #{deptId} ORDER BY create_time DESC
    </select>

    <!-- 分页查询员工-->
    <select id="listByPage" resultType="Employee">
        SELECT
        *
        FROM emp
        <where>
            <!-- 条件1: 姓名模糊查询 -->
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <!-- 条件2: 性别精确查询 -->
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="deptId != null">
                AND dept_id = #{deptId}
            </if>
            <if test="jobId != null">
                AND job_id = #{jobId}
            </if>
            <!-- 条件3: 入职日期范围查询 - 开始时间 -->
            <if test="begin != null and begin != ''">
                AND entry_date >= #{begin}
            </if>
            <!-- 条件4: 入职日期范围查询 - 结束时间 -->
            <if test="end != null and end != ''">
                AND entry_date &lt;= #{end}
            </if>
        </where>
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 分页查询符合条件的员工总记录数-->
    <select id="count" resultType="Long">
        SELECT COUNT(*) FROM emp
        <where>
            <!-- 条件1: 姓名模糊查询 -->
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <!-- 条件2: 性别精确查询 -->
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="deptId != null">
                AND dept_id = #{deptId}
            </if>
            <if test="jobId != null">
                AND job_id = #{jobId}
            </if>
            <!-- 条件3: 入职日期范围查询 - 开始时间 -->
            <if test="begin != null and begin != ''">
                AND entry_date >= #{begin}
            </if>
            <!-- 条件4: 入职日期范围查询 - 结束时间 -->
            <if test="end != null and end != ''">
                AND entry_date &lt;= #{end}
            </if>
        </where>
    </select>

</mapper>